buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.2'
    }
}
apply plugin: 'com.android.application'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.android.gms:play-services:5.0.89'
    compile 'com.android.support:support-v4:20.0.0'
    compile 'org.roboguice:roboguice:2.0'
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    compile project(':Vendor:SlidingMenu:library')
    compile project(':Vendor:ShowcaseView:library')
    compile project(':Vendor:NumberPicker:lib')
    compile files('libs/orman-20120316.jar')
}

def loadSecret(String name) {
    return hasProperty(name) ? getProperty(name) : ""
}

android {
    compileSdkVersion 20
    buildToolsVersion "20"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 20
        versionCode 13
        versionName "3.0.5"
        testApplicationId "es.glasspixel.wlanaudit.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"

        buildConfigField "String", "ADMOB_KEY", "\"${loadSecret("ADMOB_KEY")}\""
    }

    signingConfigs {
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file(".")
            storePassword " "
            keyAlias " "
            keyPassword " "
        }
    }

    buildTypes {
        release {
            runProguard true
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFile 'proguard-project.txt'
            signingConfig signingConfigs.release
        }
    }
}

task askForPasswords << {
    // Must create String because System.readPassword() returns char[]
    // (and assigning that below fails silently)
    def storePath = new String(System.console().readLine("\nKeystore Path: "))
    def storePw = new String(System.console().readPassword("Keystore password: "))
    def keyAlias = new String(System.console().readLine("Key Alias: "))
    def keyPw  = new String(System.console().readPassword("Key password: "))

    android.signingConfigs.release.storeFile = file(storePath)
    android.signingConfigs.release.storePassword = storePw
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPw
}

tasks.whenTaskAdded { theTask -> 
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "askForPasswords"
    }
}
